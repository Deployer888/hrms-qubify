{
    "openapi": "3.0.0",
    "info": {
        "title": "Your API Title",
        "description": "A description of your API",
        "contact": {
            "email": "contact@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/announcements-create": {
            "get": {
                "tags": [
                    "Announcement"
                ],
                "summary": "Create Announcement",
                "description": "Fetches and returns employees, branches, and departments for announcement creation. Requires 'Create Announcement' permission.",
                "operationId": "createAnnouncement",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "bearer",
                            "example": "Bearer YOUR_ACCESS_TOKEN"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "employees": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "branches": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Main Branch"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "departments": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Sales"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Permission denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission denied."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/announcement-store": {
            "post": {
                "tags": [
                    "Announcement"
                ],
                "summary": "Store a new Announcement",
                "description": "Creates a new announcement and sends notifications if configured. Requires 'Create Announcement' permission.",
                "operationId": "storeAnnouncement",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "bearer",
                            "example": "Bearer YOUR_ACCESS_TOKEN"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "start_date",
                                    "end_date",
                                    "branch_id",
                                    "department_id",
                                    "employee_id",
                                    "description"
                                ],
                                "properties": {
                                    "title": {
                                        "description": "Title of the announcement",
                                        "type": "string",
                                        "example": "New Policy Update"
                                    },
                                    "start_date": {
                                        "description": "Start date of the announcement",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-09-01"
                                    },
                                    "end_date": {
                                        "description": "End date of the announcement",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-09-30"
                                    },
                                    "branch_id": {
                                        "description": "ID of the branch",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "department_id": {
                                        "description": "Array of department IDs",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "employee_id": {
                                        "description": "Array of employee IDs",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "description": {
                                        "description": "Description of the announcement",
                                        "type": "string",
                                        "example": "Please review the updated policy document attached."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Announcement successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Announcement successfully created."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The title field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Permission denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission denied."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/announcement-detail/{id}": {
            "get": {
                "tags": [
                    "Announcement"
                ],
                "summary": "Get Announcement Detail",
                "description": "Fetches the details of a specific announcement. Requires 'Create Announcement' permission.",
                "operationId": "getAnnouncementDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the announcement to retrieve.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "bearer",
                            "example": "Bearer YOUR_ACCESS_TOKEN"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Announcement details successfully retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "announcement": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "New Policy Update"
                                                },
                                                "start_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2024-09-01"
                                                },
                                                "end_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2024-09-30"
                                                },
                                                "branch_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "department_id": {
                                                    "type": "string",
                                                    "example": "1,2,3"
                                                },
                                                "employee_id": {
                                                    "type": "string",
                                                    "example": "1,2,3"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Please review the updated policy document attached."
                                                },
                                                "created_by": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Permission denied or announcement not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission denied or announcement not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/announcement-edit/{id}": {
            "get": {
                "tags": [
                    "Announcement"
                ],
                "summary": "Get Announcement for Editing",
                "description": "Fetches details of a specific announcement for editing. Requires 'Edit Announcement' permission.",
                "operationId": "getAnnouncementForEditing",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the announcement to retrieve for editing.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "bearer",
                            "example": "Bearer YOUR_ACCESS_TOKEN"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Announcement details successfully retrieved for editing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "announcement": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "New Policy Update"
                                                },
                                                "start_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2024-09-01"
                                                },
                                                "end_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2024-09-30"
                                                },
                                                "branch_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "department_id": {
                                                    "type": "string",
                                                    "example": "1,2,3"
                                                },
                                                "employee_id": {
                                                    "type": "string",
                                                    "example": "1,2,3"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Please review the updated policy document attached."
                                                },
                                                "created_by": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "branches": {
                                            "type": "object",
                                            "example": {
                                                "1": "Headquarters",
                                                "2": "Branch Office"
                                            },
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        },
                                        "departments": {
                                            "type": "object",
                                            "example": {
                                                "1": "HR",
                                                "2": "Finance"
                                            },
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Permission denied or announcement not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission denied or announcement not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/announcement-update/{id}": {
            "put": {
                "tags": [
                    "Announcement"
                ],
                "summary": "Update an announcement",
                "description": "Update an announcement if the user has the 'Edit Announcement' permission and is the creator of the announcement.",
                "operationId": "de042eaae13b8186d4fad7345c5ca369",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the announcement to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "New Announcement Title"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-08-01"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-08-31"
                                    },
                                    "branch_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "department_id": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Details about the announcement."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Announcement successfully updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Announcement successfully updated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The title field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Permission denied or announcement not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission denied or announcement not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/announcement-delete/{id}": {
            "delete": {
                "tags": [
                    "Announcement"
                ],
                "summary": "Delete an announcement",
                "description": "Delete an announcement if the user has the 'Delete Announcement' permission and is the creator of the announcement.",
                "operationId": "c8dd56a0321b91310a16715041082182",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the announcement to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Announcement successfully deleted.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Announcement successfully deleted."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Permission denied or announcement not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission denied or announcement not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/announcement/getdepartment/{id}": {
            "get": {
                "tags": [
                    "Announcement"
                ],
                "summary": "Get departments for an announcement",
                "description": "Retrieve the departments associated with a specific announcement.",
                "operationId": "bf514df586649a7c2e1cb543aa678885",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the announcement to retrieve departments for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Departments successfully retrieved.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "departments": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Permission denied.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission denied."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Announcement not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Announcement not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/announcement/getemployee/{id}": {
            "post": {
                "tags": [
                    "Announcement"
                ],
                "summary": "Get employees by department",
                "description": "Retrieve a list of employees filtered by department(s). If '0' is included in the department IDs, all employees will be retrieved regardless of department.",
                "operationId": "e374cf42b8f2bd6ef0161b8c5371420d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "department_id": {
                                        "description": "Array of department IDs to filter employees by. Include '0' to retrieve all employees.",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "List of employees successfully retrieved.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": {
                                    "1": "John Doe",
                                    "2": "Jane Smith"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The department_id field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/attendance-list": {
            "get": {
                "tags": [
                    "Attendance"
                ],
                "summary": "Get Attendance Records",
                "operationId": "8a191704c64f834eb93e76e8f9a70f13",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of attendance data to filter by (e.g., 'monthly' or 'daily').",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "monthly",
                                "daily"
                            ]
                        }
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "description": "Month to filter attendance by, in 'YYYY-MM' format.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-08"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Specific date to filter attendance by, in 'YYYY-MM-DD' format.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-08-29"
                        }
                    },
                    {
                        "name": "branch",
                        "in": "query",
                        "description": "Branch ID to filter attendance records by.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "department",
                        "in": "query",
                        "description": "Department ID to filter attendance records by.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "attendance": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "employee_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "date": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "example": "2023-08-29"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "Present"
                                                    },
                                                    "clock_in": {
                                                        "type": "string",
                                                        "format": "time",
                                                        "example": "09:00:00"
                                                    },
                                                    "clock_out": {
                                                        "type": "string",
                                                        "format": "time",
                                                        "example": "17:00:00"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "branches": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string",
                                                "example": "All"
                                            }
                                        },
                                        "departments": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string",
                                                "example": "HR"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Permission denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Permission denied."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/attendance-create": {
            "get": {
                "tags": [
                    "Attendance"
                ],
                "summary": "Retrieve Employees for Attendance Creation",
                "operationId": "41815cb5ce82ec9f2e084795bc7e9336",
                "responses": {
                    "200": {
                        "description": "Employees retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Employees retrieved successfully."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Permission denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission denied."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve employees",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve employees."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Error message details."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/attendance-store": {
            "post": {
                "tags": [
                    "Attendance"
                ],
                "summary": "Create Employee Attendance",
                "operationId": "4dae92204f42d4200ef97415f9de116c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "employee_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-08-29"
                                    },
                                    "clock_in": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "09:00"
                                    },
                                    "clock_out": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "17:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Employee attendance successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "string",
                                            "example": "Employee attendance successfully created."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Permission denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Permission denied."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Employee Attendance Already Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Employee Attendance Already Created."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The date field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred while processing your request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/attendance-edit/{id}": {
            "get": {
                "tags": [
                    "Attendance"
                ],
                "summary": "Edit Attendance Record",
                "operationId": "787dfbdf63cbd38e7ad524677b4abe7c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the attendance record to edit",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of attendance record and employees",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "attendanceEmployee": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "employee_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2023-08-29"
                                                },
                                                "clock_in": {
                                                    "type": "string",
                                                    "format": "time",
                                                    "example": "09:00:00"
                                                },
                                                "clock_out": {
                                                    "type": "string",
                                                    "format": "time",
                                                    "example": "17:00:00"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "Present"
                                                },
                                                "late": {
                                                    "type": "string",
                                                    "format": "time",
                                                    "example": "00:15:00"
                                                },
                                                "early_leaving": {
                                                    "type": "string",
                                                    "format": "time",
                                                    "example": "00:00:00"
                                                },
                                                "overtime": {
                                                    "type": "string",
                                                    "format": "time",
                                                    "example": "01:00:00"
                                                },
                                                "total_rest": {
                                                    "type": "string",
                                                    "format": "time",
                                                    "example": "00:30:00"
                                                },
                                                "created_by": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "employees": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Permission denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Permission denied."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Attendance record not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Attendance record not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred while processing your request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/attendance-update/{id}": {
            "put": {
                "tags": [
                    "Attendance"
                ],
                "summary": "Update Attendance Record",
                "operationId": "ac95def44f6b8c0c3d114d6c5a280f15",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the attendance record to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "employee_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-08-29"
                                    },
                                    "clock_in": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "09:00"
                                    },
                                    "clock_out": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "17:00"
                                    },
                                    "time": {
                                        "description": "Required for employee type only.",
                                        "type": "string",
                                        "format": "time",
                                        "example": "17:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Attendance updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "string",
                                            "example": "Attendance updated successfully."
                                        },
                                        "is_birthday": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Attendance record not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Attendance record not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Clock in/out multiple times per day not allowed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Employee is not allowed to clock in and out multiple times per day."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred while processing your request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/attendance-delete/{id}": {
            "delete": {
                "tags": [
                    "Attendance"
                ],
                "summary": "Delete Attendance Record",
                "operationId": "78a1ab0ce1f28834315ef29267a6d9f4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the attendance record to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attendance successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "string",
                                            "example": "Attendance successfully deleted."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Permission denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Permission denied."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Attendance record not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Attendance record not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred while processing your request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/attendance": {
            "post": {
                "tags": [
                    "Attendance"
                ],
                "summary": "Record Employee Attendance",
                "operationId": "0ef414e9610290517780971b3a646a59",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "09:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Attendance recorded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "string",
                                            "example": "Attendance recorded successfully."
                                        },
                                        "is_birthday": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "IP restriction or permission denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "This IP is not allowed to clock in & clock out."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred while processing your request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/attendance-current-timer-state": {
            "get": {
                "tags": [
                    "Attendance"
                ],
                "summary": "Get Current Attendance Timer State",
                "operationId": "8149d3e396bc755434572b7d6c54d64b",
                "responses": {
                    "200": {
                        "description": "Current attendance timer state retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "clock_in": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2023-08-29T09:00:00Z"
                                        },
                                        "attendance_id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred while processing your request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "8e4e3cb7b46126f4696379d3c7eeb4ad",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "secretPassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "secretPassword123"
                                    },
                                    "g-recaptcha-response": {
                                        "type": "string",
                                        "example": "recaptcha-response-token"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "A verification link has been sent to your email address."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "password_confirmation": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "g-recaptcha-response": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Recaptcha validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Recaptcha validation failed."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate a user and generate an access token",
                "operationId": "222b2625838e3c57e017987f73598fda",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "secretPassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "format": "email",
                                                            "example": "john.doe@example.com"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2023-08-27T00:00:00.000000Z"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2023-08-27T00:00:00.000000Z"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user",
                "description": "Logs out the currently authenticated user by invalidating their session token.",
                "operationId": "ad65cbbd4e9f201619eae184a5961a98",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/employees": {
            "get": {
                "tags": [
                    "Employees"
                ],
                "summary": "Fetch all employees",
                "description": "Get a list of all employees accessible by the authenticated user.",
                "operationId": "getEmployees",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "John Doe"
                                            },
                                            "email": {
                                                "type": "string",
                                                "example": "john.doe@example.com"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Permission denied."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Employee"
                ],
                "summary": "Create a new employee",
                "description": "Store a new employee record",
                "operationId": "storeEmployee",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "dob",
                                    "gender",
                                    "phone",
                                    "address",
                                    "email",
                                    "password",
                                    "department_id",
                                    "designation_id",
                                    "shift_start"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "dob": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "example": "Male"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "department_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "designation_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "shift_start": {
                                        "type": "string",
                                        "example": "09:00"
                                    },
                                    "document": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Employee successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "string",
                                            "example": "Employee successfully created."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "dob": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "gender": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "phone": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "address": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "department_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "designation_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "shift_start": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "document": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Permission denied."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/employees/{id}": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "summary": "Get employee details by ID",
                "description": "Retrieve detailed employee information, including documents, leaves, and other related data.",
                "operationId": "getEmployeeDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "employee": {
                                            "description": "Detailed employee information",
                                            "type": "object"
                                        },
                                        "employeesId": {
                                            "description": "Formatted employee ID",
                                            "type": "string"
                                        },
                                        "branches": {
                                            "description": "Branch name",
                                            "type": "string"
                                        },
                                        "departments": {
                                            "description": "Department name",
                                            "type": "string"
                                        },
                                        "designations": {
                                            "description": "Designation name",
                                            "type": "string"
                                        },
                                        "documents": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "document_name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "leaves": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    },
                                                    "days": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Permission denied"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Employee not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Employee"
                ],
                "summary": "Update an existing employee",
                "description": "Update an employee record by ID",
                "operationId": "updateEmployee",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "dob",
                                    "gender",
                                    "phone",
                                    "address",
                                    "shift_start"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "dob": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "example": "Male"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "department_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "designation_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "shift_start": {
                                        "type": "string",
                                        "example": "09:00"
                                    },
                                    "document": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Employee successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "string",
                                            "example": "Employee successfully updated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "dob": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "gender": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "phone": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "address": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "shift_start": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "document": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Permission denied."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Employee not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Employee"
                ],
                "summary": "Delete an employee",
                "description": "Delete an employee record by ID",
                "operationId": "deleteEmployee",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "string",
                                            "example": "Employee successfully deleted."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Employee not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Permission denied."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/employees/import": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "summary": "Import employees from a CSV file",
                "description": "Imports employee data from a CSV file and creates new employees or updates existing ones.",
                "operationId": "importEmployees",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "CSV file containing employee data",
                                        "type": "file",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Employees successfully imported",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Record successfully imported"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid file type or file is missing"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Permission denied"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/employees/designations": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "summary": "Get designations by department",
                "description": "Retrieve a list of designations based on the given department ID",
                "operationId": "getDesignations",
                "parameters": [
                    {
                        "name": "department_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of designations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Manager"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Department ID is required"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/employees/profile": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "summary": "Get employee profiles",
                "description": "Retrieve employee profiles based on filters.",
                "operationId": "getEmployeeProfile",
                "parameters": [
                    {
                        "name": "branch",
                        "in": "query",
                        "description": "Filter by branch ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "department",
                        "in": "query",
                        "description": "Filter by department ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "designation",
                        "in": "query",
                        "description": "Filter by designation ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of employee profiles and filter options",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "employees": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "john.doe@example.com"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "branches": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Headquarters"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "departments": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "HR"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "designations": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Manager"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Permission denied"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/employees/profile/{id}": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "summary": "Get employee profile by ID",
                "description": "Retrieve detailed employee profile information by ID.",
                "operationId": "getEmployeeProfileById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee profile details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "employee": {
                                            "description": "Detailed employee information",
                                            "type": "object"
                                        },
                                        "employeesId": {
                                            "description": "Formatted employee ID",
                                            "type": "string"
                                        },
                                        "branches": {
                                            "description": "Branch details",
                                            "type": "object"
                                        },
                                        "departments": {
                                            "description": "Department details",
                                            "type": "object"
                                        },
                                        "designations": {
                                            "description": "Designation details",
                                            "type": "object"
                                        },
                                        "documents": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "document_name": {
                                                        "type": "string",
                                                        "example": "resume.pdf"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Permission denied"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Employee not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/employees/employee-number": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "summary": "Generate new employee number",
                "description": "Retrieve the next available employee number based on the latest record.",
                "operationId": "getEmployeeNumber",
                "responses": {
                    "200": {
                        "description": "Employee number",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "employee_number": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/employees/last-login": {
            "get": {
                "tags": [
                    "Employee"
                ],
                "summary": "Get last login information of users",
                "description": "Retrieve last login details of users.",
                "operationId": "getLastLogin",
                "responses": {
                    "200": {
                        "description": "List of users and their last login times",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "users": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "last_login_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/employees-by-branch": {
            "post": {
                "tags": [
                    "Employee"
                ],
                "summary": "Get employees by branch",
                "description": "Retrieve a list of employees based on the given branch ID.",
                "operationId": "getEmployeesByBranch",
                "parameters": [
                    {
                        "name": "branch",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of employees",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Branch ID is required"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get all events",
                "operationId": "e529c81e6aaec82f49950a87ed881f57",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "title": {
                                                "type": "string",
                                                "example": "Annual Meeting"
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "Detailed description of the event."
                                            },
                                            "start": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-09-01 09:00:00"
                                            },
                                            "end": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-09-01 17:00:00"
                                            },
                                            "backgroundColor": {
                                                "type": "string",
                                                "example": "#FF5733"
                                            },
                                            "borderColor": {
                                                "type": "string",
                                                "example": "#fff"
                                            },
                                            "textColor": {
                                                "type": "string",
                                                "example": "white"
                                            },
                                            "url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://example.com/events/1/edit"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/events/{id}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get event details",
                "operationId": "c0f602d773798994c228d99dbd63b842",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the event to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Annual Meeting"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Details of the event."
                                        },
                                        "start_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2024-09-01"
                                        },
                                        "end_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2024-09-02"
                                        },
                                        "color": {
                                            "type": "string",
                                            "example": "#FF5733"
                                        },
                                        "created_by": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized access."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Permission denied."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "No data found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Events"
                ],
                "summary": "Update event details",
                "operationId": "8b1dd7f57d8fbd2e85af2762950e0b1d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the event to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EventRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Event successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "string",
                                            "example": "Event successfully updated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation failed for one or more fields."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized access."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Permission denied."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Event not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Events"
                ],
                "summary": "Delete event",
                "operationId": "deca25daa2d423da0ff6b6677d92545b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the event to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "string",
                                            "example": "Event successfully deleted."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized access."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Permission denied."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Event not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/events/import": {
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Import events from a file",
                "operationId": "4ba3450938d3ed5c73baea8e829c927f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "File to import",
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "File successfully imported"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Announcement": {
                "required": [
                    "id",
                    "title",
                    "start_date",
                    "end_date",
                    "branch_id",
                    "department_id",
                    "employee_id",
                    "description",
                    "created_by"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Company Meeting"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-08-30"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-09-01"
                    },
                    "branch_id": {
                        "type": "integer",
                        "example": 2
                    },
                    "department_id": {
                        "type": "string",
                        "example": "[1,2,3]"
                    },
                    "employee_id": {
                        "type": "string",
                        "example": "[1,2,3]"
                    },
                    "description": {
                        "type": "string",
                        "example": "Important company meeting"
                    },
                    "created_by": {
                        "type": "integer",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "EventRequest": {
                "required": [
                    "branch_id",
                    "department_id",
                    "employee_id",
                    "title",
                    "start_date",
                    "end_date",
                    "color"
                ],
                "properties": {
                    "branch_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "department_id": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    "employee_id": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    "title": {
                        "type": "string",
                        "example": "Annual Meeting"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-09-01"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-09-02"
                    },
                    "color": {
                        "type": "string",
                        "example": "#FF5733"
                    },
                    "description": {
                        "type": "string",
                        "example": "This is a detailed description of the event."
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "passport": {
                "type": "oauth2",
                "description": "Laravel passport oauth2 security.",
                "in": "header",
                "scheme": "https",
                "flows": {
                    "password": {
                        "authorizationUrl": "https://hrm.qubifytech.com//oauth/authorize",
                        "tokenUrl": "https://hrm.qubifytech.com//oauth/token",
                        "refreshUrl": "https://hrm.qubifytech.com//token/refresh",
                        "scopes": []
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Announcement",
            "description": "Announcement"
        },
        {
            "name": "Attendance",
            "description": "Attendance"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Employees",
            "description": "Employees"
        },
        {
            "name": "Employee",
            "description": "Employee"
        },
        {
            "name": "Events",
            "description": "Events"
        }
    ]
}